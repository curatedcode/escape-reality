---
import { getCollection } from "astro:content";
import BookingCTA from "../../../components/BookingCTA.astro";
import Button from "../../../components/Button";
import { getButtonClass } from "../../../components/Button/getButtonClass";
import {
	ArrowLeftIcon,
	ArrowRightIcon,
	CalendarIcon,
	ClockIcon,
	EnvelopeIcon,
	FacebookIcon,
	LinkedInIcon,
	UserIcon,
	XTwitterIcon,
} from "../../../components/Icons";
import Input from "../../../components/Input.astro";
import Layout from "../../../layouts/Layout.astro";

export async function getStaticPaths() {
	const blogPosts = await getCollection("blog");

	return blogPosts.map((post) => {
		const titleFormatted = post.data.title
			.toLowerCase()
			.replaceAll(" ", "-")
			.replace(/[^\w-]+/g, "");

		return {
			params: {
				id: post.data.id,
				title: titleFormatted,
			},
			props: { post },
		};
	});
}

function formatBlogUrl({ id, title }: { id: number; title: string }) {
	return `/blog/${id}/${title
		.toLowerCase()
		.replaceAll(" ", "-")
		.replace(/[^\w-]+/g, "")}`;
}

const { params } = Astro;
const blogPosts = (await getCollection("blog")).sort(
	(a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime(),
);

const postIndex = blogPosts.findIndex((p) => p.data.id === Number(params.id));
const post = blogPosts[postIndex];

const previousPost =
	blogPosts[postIndex === 0 ? blogPosts.length - 1 : postIndex - 1];
const nextPost =
	blogPosts[postIndex === blogPosts.length - 1 ? 0 : postIndex + 1];
const relatedPosts = post
	? blogPosts
			.filter(
				(p) =>
					p.id !== post.id &&
					(p.data.category === post.data.category ||
						p.data.tags.some((tag) => post.data.tags.includes(tag))),
			)
			.slice(0, 2)
	: [];
---

<Layout
	title={post ? `${post.data.title} - Escape Reality` : "Post - Escape Reality"}
>
	{
		post ? (
			<div class="flex min-h-screen flex-col">
				{/* Hero Section */}
				<section class="relative h-[50vh] overflow-hidden">
					<div class="absolute inset-0 bg-black/60 z-10" />
					<img
						src={post.data.image}
						alt={post.data.title}
						class="object-cover w-full h-full absolute blur-[1px]"
					/>
					<div class="relative z-20 container mx-auto px-4 h-full flex flex-col justify-end pb-12 -mt-24">
						<div class="inline-block px-4 py-1 bg-purple-600 rounded-full text-sm font-medium text-white mb-4 w-fit">
							{post.data.category}
						</div>
						<h1 class="text-3xl md:text-5xl font-bold text-white leading-tight mb-4">
							{post.data.title}
						</h1>
						<div class="flex flex-wrap items-center text-gray-300 gap-x-6 gap-y-2">
							<div class="flex items-center">
								<UserIcon class="h-4 w-4 mr-2" />
								{post.data.author}
							</div>
							<div class="flex items-center">
								<CalendarIcon class="h-4 w-4 mr-2" />
								{new Date(post.data.date).toLocaleDateString("en-US", {
									month: "short",
									day: "numeric",
									year: "numeric",
								})}
							</div>
							<div class="flex items-center">
								<ClockIcon class="h-4 w-4 mr-2" />
								{post.data.readTime}
							</div>
						</div>
					</div>
				</section>

				{/* Blog Content */}
				<section class="py-16 bg-gray-900">
					<div class="container mx-auto px-4">
						<div class="flex flex-col lg:flex-row gap-12">
							{/* Main Content */}
							<div class="w-full lg:w-2/3">
								<div class="bg-gray-800 rounded-xl p-8">
									{/* Blog Content */}
									<div
										class="prose prose-lg max-w-none text-white [&_*]:text-white"
										set:html={post.rendered?.html}
									/>

									{/* Tags */}
									<div class="mt-8 pt-8 border-t border-gray-700">
										<div class="flex flex-wrap gap-2">
											{post.data.tags.map((tag) => (
												<span class="px-3 py-1 bg-gray-700 rounded-full text-sm text-gray-200">
													#{tag}
												</span>
											))}
										</div>
									</div>

									{/* Post Navigation */}
									<div class="mt-8 pt-8 border-t border-gray-700 flex justify-between">
										<a
											href={formatBlogUrl({
												id: previousPost.data.id,
												title: previousPost.data.title,
											})}
											class={getButtonClass({
												variant: "outline",
												class:
													"border-gray-700 text-gray-300 hover:bg-gray-700",
											})}
										>
											<ArrowLeftIcon class="mr-2 h-4 w-4" />
											Previous Post
										</a>
										<a
											href={formatBlogUrl({
												id: nextPost.data.id,
												title: nextPost.data.title,
											})}
											class={getButtonClass({
												variant: "outline",
												class:
													"border-gray-700 text-gray-300 hover:bg-gray-700",
											})}
										>
											Next Post
											<ArrowRightIcon class="ml-2 h-4 w-4" />
										</a>
									</div>
								</div>
							</div>

							{/* Sidebar */}
							<div class="w-full lg:w-1/3">
								{/* Related Posts */}
								<div class="bg-gray-800 rounded-xl p-6 mb-8">
									<h3 class="text-xl font-bold text-white mb-4">
										Related Posts
									</h3>
									<div class="space-y-6">
										{relatedPosts.length > 0 ? (
											relatedPosts.map((post) => (
												<div class="flex items-center gap-4">
													<div class="relative size-16 flex-shrink-0">
														<img
															src={post.data.image}
															alt={post.data.title}
															class="object-cover rounded-md h-full"
														/>
													</div>
													<div>
														<a
															href={formatBlogUrl({
																id: post.data.id,
																title: post.data.title,
															})}
															class="font-medium text-white hover:text-purple-400 line-clamp-2"
														>
															{post.data.title}
														</a>
														<div class="flex items-center text-xs text-gray-400 mt-1">
															<CalendarIcon class="h-3 w-3 mr-1" />
															{new Date(post.data.date).toLocaleDateString(
																"en-US",
																{
																	month: "short",
																	day: "numeric",
																	year: "numeric",
																},
															)}
														</div>
													</div>
												</div>
											))
										) : (
											<div class="text-center w-full text-gray-400">
												No related posts.
											</div>
										)}
									</div>
								</div>

								{/* Newsletter */}
								<div class="bg-purple-900 rounded-xl p-6">
									<h3 class="text-xl font-bold mb-2 text-white">
										Subscribe to Our Newsletter
									</h3>
									<p class="text-purple-200 text-sm mb-4">
										Get the latest escape room tips, promotions, and news
										delivered to your inbox.
									</p>
									<div class="space-y-2">
										<Input placeholder="Your email address" />
										<Button class="w-full">Subscribe</Button>
									</div>
								</div>
							</div>
						</div>
					</div>
				</section>

				{/* More Articles */}
				<section class="py-16 bg-black text-white">
					<div class="container mx-auto px-4">
						<div class="text-center mb-12">
							<h2 class="text-3xl md:text-4xl font-bold mb-4">
								More Articles You Might Enjoy
							</h2>
							<p class="text-lg text-gray-300 max-w-2xl mx-auto">
								Continue exploring our escape room insights and tips.
							</p>
						</div>

						{relatedPosts.length > 0 ? (
							<div class="grid grid-cols-1 md:grid-cols-3 gap-8">
								{relatedPosts.map((post) => (
									<article class="bg-gray-800 rounded-xl overflow-hidden flex flex-col h-full">
										<div class="relative h-48">
											<img
												src={post.data.image}
												alt={post.data.title}
												class="object-cover h-full w-full"
											/>
											<div class="absolute top-4 left-4 px-3 py-1 bg-purple-600 rounded-full text-xs font-medium text-white">
												{post.data.category}
											</div>
										</div>
										<div class="p-6 flex flex-col flex-grow">
											<h3 class="text-xl font-bold mb-2 text-white">
												{post.data.title}
											</h3>
											<p class="text-gray-300 mb-4 flex-grow">
												{post.data.excerpt}
											</p>
											<div class="flex items-center text-sm text-gray-400 mb-4">
												<div class="flex items-center mr-4">
													<UserIcon class="h-4 w-4 mr-1" />
													{post.data.author}
												</div>
												<div class="flex items-center">
													<CalendarIcon class="h-4 w-4 mr-1" />
													{new Date(post.data.date).toLocaleDateString(
														"en-US",
														{
															month: "short",
															day: "numeric",
															year: "numeric",
														},
													)}
												</div>
											</div>
											<a
												href={formatBlogUrl({
													id: post.data.id,
													title: post.data.title,
												})}
												class={getButtonClass({ variant: "outline" })}
											>
												Read More
												<ArrowRightIcon class="ml-2 h-4 w-4" />
											</a>
										</div>
									</article>
								))}
							</div>
						) : (
							<div class="text-center w-full text-gray-400">
								No related posts.
							</div>
						)}

						<div class="text-center mt-12">
							<a href="/blog" class={getButtonClass({})}>
								View All Articles
								<ArrowRightIcon class="ml-2 h-4 w-4" />
							</a>
						</div>
					</div>
				</section>

				{/* Booking CTA */}
				<BookingCTA />
			</div>
		) : (
			<div class="container mx-auto px-4 py-32 text-center">
				<h1 class="text-4xl font-bold text-custom-brown mb-4">
					Post Not Found
				</h1>
				<p class="text-gray-11 mb-8">
					The blog post you're looking for doesn't exist or has been removed.
				</p>
				<a href="/blog" class={getButtonClass({ variant: "solid" })}>
					Back to Blog
				</a>
			</div>
		)
	}
</Layout>
